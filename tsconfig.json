{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Projects */
    // "incremental": true, //通过从以前的编译中读取/写入信息到磁盘上的文件来启用增量编译

    /* Language and Environment */
    "target": "ES5", //表示生成代码的语言版本
    "lib": ["DOM", "DOM.Iterable", "ESNext"], //指定要包含在编译中的library,默认情况下会包含target版本所需的library,ESNext 表示含有最新特性JS的版本
    "jsx": "preserve", //见docs/tsconfig-doc.md
    "experimentalDecorators": true, //启用装饰器
    "emitDecoratorMetadata": true, //为装饰器提供元数据的支持
    // "resolveJsonModule":true, //允许导入扩展名为.json的模块

    /* Modules */
    "module": "ESNext", //见docs/tsconfig-doc.md
    "rootDir": "./src", //进行编译的目录
    "moduleResolution": "nodenext", //见docs/tsconfig-doc.md
    "baseUrl": "./", //用于解析非相对模块名称的基目录
    "paths": {
      "@/assets/*": ["assets/*"],
      "@/components/*": ["components/*"],
      "@/config/*": ["config/*"],
      "@/views/*": ["views/*"],
      "@/utils/*": ["utils/*"],
      "@/constants/*": ["constants/*"],
      "@/hooks/*": ["hooks/*"]
    }, //用于别名解析
    "rootDirs": [], //根文件夹列表，其组合内容表示项目运行时的结构内容
    "typeRoots": [], //包含类型声明的文件列表
    "types": [], //需要包含的类型声明文件名列表
    "allowUmdGlobalAccess": true, //见docs/tsconfig-doc.md

    /* JavaScript Support */
    "allowJs": true, //允许TS编译JS文件
    "checkJs": true, //报告JavaScript文件中的错误

    /* Emit */
    "noEmit": true, //编译时不产生任何文件(只进行类型检查)
    // "declaration": true, //生成相应的 '.d.ts' 文件
    // "importHelpers": true, //从 tslib 导入辅助工具函数
    // "sourceMap": true, //生成相应的 '.map' 文件
    // "outFile": "./", // 将输出文件合并为一个文件
    // "outDir": "./", // 指定输出目录
    // "removeComments": true, //删除编译后的所有的注释
    // "sourceRoot": "", //指定调试器应该找到 TypeScript 文件而不是源文件的位置
    // "mapRoot": "", //指定调试器应该找到映射文件而不是生成文件的位置
    // "inlineSourceMap": true, //生成单个 sourceMap 文件，而不是将 sourceMap 生成不同的文件
    // "inlineSources": true, // 将代码与 sourcemaps 生成到一个文件中，要求同时设置了 --inlineSourceMap 或 --sourceMap 属性
    "downlevelIteration": true, //当目标是ES5或ES3的时候提供对for-of、扩展运算符和解构赋值中对于迭代器的完整支持

    /* Interop Constraints */
    // "allowSyntheticDefaultImports":true,  //允许通过import x from 'y',即使模块中没有显式指定default导出
    "isolatedModules": true, //将每个文件做为单独的模块 （与 'ts.transpileModule' 类似）。需要有正确的导出
    "esModuleInterop": true, //见docs/tsconfig-doc.md
    "forceConsistentCasingInFileNames": true, //对文件名强制区分大小写

    /* Type Checking */
    "strict": true, //开启严格模式
    "noImplicitAny": true, //不允许隐式的any
    "strictNullChecks": true, //启用严格的 null 检查
    "noImplicitThis": true, //当 this 表达式值为 any 类型的时候，生成一个错误
    "alwaysStrict": true, //以严格模式检查每个模块，并在每个文件里加入 'use strict'
    "noFallthroughCasesInSwitch": true, //报告 switch 语句的 fallthrough 错误。（即，不允许switch 的 case 语句贯穿）
    "noUnusedLocals": true, //有未使用的变量时，抛出错误
    "noUnusedParameters": true, //有未使用的参数时，抛出错误
    // "noImplicitReturns": true, //并不是所有函数里的代码都有返回值时，抛出错误

    /* Completeness */
    "skipLibCheck": true //跳过类型声明文件的TS检查
  },
  "include": ["src/**/*"], //表示需要进行类型检查的部分
  "exclude": ["node_modules", "**/*.spec.ts"] //表示不需要typescript类型检查的部分
}
